# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015 Jeff Forcier
# This file is distributed under the same license as the Fabric package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Fabric \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-06-16 16:34+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../api/contrib/project.rst:3
msgid "Project Tools"
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project:1
msgid "Useful non-core functionality, e.g. functions composing multiple operations."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:1
msgid "Synchronize a remote directory with the current project directory via rsync."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:3
msgid "Where ``upload_project()`` makes use of ``scp`` to copy one's entire project every time it is invoked, ``rsync_project()`` uses the ``rsync`` command-line utility, which only transfers files newer than those on the remote end."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:8
msgid "``rsync_project()`` is thus a simple wrapper around ``rsync``; for details on how ``rsync`` works, please see its manpage. ``rsync`` must be installed on both your local and remote systems in order for this operation to work correctly."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:13
msgid "This function makes use of Fabric's ``local()`` operation, and returns the output of that function call; thus it will return the stdout, if any, of the resultant ``rsync`` call."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:17
msgid "``rsync_project()`` takes the following parameters:"
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:19
msgid "``remote_dir``: the only required parameter, this is the path to the directory on the remote server. Due to how ``rsync`` is implemented, the exact behavior depends on the value of ``local_dir``:"
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:23
msgid "If ``local_dir`` ends with a trailing slash, the files will be dropped inside of ``remote_dir``. E.g. ``rsync_project(\"/home/username/project\", \"foldername/\")`` will drop the contents of ``foldername`` inside of ``/home/username/project``."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:27
msgid "If ``local_dir`` does **not** end with a trailing slash (and this includes the default scenario, when ``local_dir`` is not specified), ``remote_dir`` is effectively the \"parent\" directory, and a new directory named after ``local_dir`` will be created inside of it. So ``rsync_project(\"/home/username\", \"foldername\")`` would create a new directory ``/home/username/foldername`` (if needed) and place the files there."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:35
msgid "``local_dir``: by default, ``rsync_project`` uses your current working directory as the source directory. This may be overridden by specifying ``local_dir``, which is a string passed verbatim to ``rsync``, and thus may be a single directory (``\"my_directory\"``) or multiple directories (``\"dir1 dir2\"``). See the ``rsync`` documentation for details."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:40
msgid "``exclude``: optional, may be a single string, or an iterable of strings, and is used to pass one or more ``--exclude`` options to ``rsync``."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:42
msgid "``delete``: a boolean controlling whether ``rsync``'s ``--delete`` option is used. If True, instructs ``rsync`` to remove remote files that no longer exist locally. Defaults to False."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:45
msgid "``extra_opts``: an optional, arbitrary string which you may use to pass custom arguments or options to ``rsync``."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:47
msgid "``ssh_opts``: Like ``extra_opts`` but specifically for the SSH options string (rsync's ``--rsh`` flag.)"
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:49
msgid "``capture``: Sent directly into an inner `~fabric.operations.local` call."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:50
msgid "``upload``: a boolean controlling whether file synchronization is performed up or downstream. Upstream by default."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:52
msgid "``default_opts``: the default rsync options ``-pthrvz``, override if desired (e.g. to remove verbosity, etc)."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:55
msgid "Furthermore, this function transparently honors Fabric's port and SSH key settings. Calling this function when the current host string contains a nonstandard port, or when ``env.key_filename`` is non-empty, will use the specified port and/or SSH key filename(s)."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:60
msgid "For reference, the approximate ``rsync`` command-line call that is constructed by this function is the following::"
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:66
msgid "The ``ssh_opts`` keyword argument."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:68
msgid "The ``capture`` keyword argument."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.rsync_project:70
msgid "The ``default_opts`` keyword argument."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.upload_project:1
msgid "Upload the current project to a remote system via ``tar``/``gzip``."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.upload_project:3
msgid "``local_dir`` specifies the local project directory to upload, and defaults to the current working directory."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.upload_project:6
msgid "``remote_dir`` specifies the target directory to upload into (meaning that a copy of ``local_dir`` will appear as a subdirectory of ``remote_dir``) and defaults to the remote user's home directory."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.upload_project:10
msgid "``use_sudo`` specifies which method should be used when executing commands remotely. ``sudo`` will be used if use_sudo is True, otherwise ``run`` will be used."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.upload_project:14
msgid "This function makes use of the ``tar`` and ``gzip`` programs/libraries, thus it will not work too well on Win32 systems unless one is using Cygwin or something similar. It will attempt to clean up the local and remote tarfiles when it finishes executing, even in the event of a failure."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.upload_project:19
msgid "Added the ``local_dir`` and ``remote_dir`` kwargs."
msgstr ""

#: ../../../../../../usr/local/lib/python2.7/site-packages/fabric/contrib/project.py:docstring of fabric.contrib.project.upload_project:22
msgid "Added the ``use_sudo`` kwarg."
msgstr ""

